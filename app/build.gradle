def plugins = [
    "com.android.application",
    "com.google.gms.google-services",
    "com.google.firebase.crashlytics",
    "kotlin-android",
    "kotlin-kapt",
    "dagger.hilt.android.plugin"
]

plugins.forEach { plugin ->
    apply plugin: plugin
}

android {
    compileSdkVersion sdk.compile

    defaultConfig {
        applicationId rootProject.applicationId
        minSdkVersion sdk.min
        targetSdkVersion sdk.target
        versionCode sdk.code
        versionName sdk.version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"

            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable false

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

def deps = [
    "dagger",
    "firebase",
    "graphql",
    "hilt",
    "leakcanary",
    "navigation",
    "okhttp",
    "work"
]

deps.forEach { dep ->
    apply from: "$rootDir/deps/${dep}.gradle"
}

def modules = [
    "feature_home",
    "lib_api",
    "lib_api_test",
    "lib_data",
    "lib_database",
    "lib_database_test",
    "lib_domain",
    "lib_instrumentation",
    "lib_preference",
    "lib_presentation",
    "lib_presentation_test",
    "lib_threading",
    "lib_worker"
]

dependencies {
    modules.forEach { module ->
        implementation project(":$module")
    }
}
